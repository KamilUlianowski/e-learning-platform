@model E_LearningWeb.ViewModels.CourseViewModel

<section class="nav nav-pills nav-stacked col-lg-10 course-section" id="ListOfMovies">
    <ul class="list-inline ul-content-course">
        <li id="LiMovies" class="selected li-movies divLink">Table of contents</li>
        <li id="LiDescription" class="li-movies divLink">Description</li>
        <li id="LiDiscussion" class="li-movies divLink">Discussion</li>
        <li id="LiTest" class="li-movies divLink">Learning Check</li>
    </ul>
    <div id="TableOfContent" class="col-lg-12 section-content-course">
        @foreach (var item in Model.ListOfMovies)
        {

            <a class="col-lg-8 movie-row" href="@Url.Action("Index", "Video", new {videoUrl = @item.VideoUrl})">
                <h3 class="movie-row"><span class="glyphicon glyphicon-play-circle" aria-hidden="true"></span>   <span>@item.Title</span></h3>
            </a>
            <div id="@item.Id" class="rateit-stars col-lg-2" style="margin-top: 20px" data-rateit-value="@item.Rating" data-rateit-ispreset="true"></div>
            <div class="col-lg-1 marginTop  ">
                @if ((bool)System.Web.HttpContext.Current.Session["logged"])
                {
                    <span>
                        <button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("DeleteMovie", "Admin", new {id = @item.Id, courseId = @item.CourseId})'">
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </span>
                }
            </div>
        }@if ((bool)System.Web.HttpContext.Current.Session["logged"])
        {
            <div class="col-lg-5">
                <button type="button" class="btn btn-default btn-lg marginTop" data-toggle="modal" data-target="#myModal">Add movie</button>
            </div>
        }
    </div>
    <div id="Description" hidden class="col-lg-12 section-content-course">
        <p class="description-text">@Model.Description</p>
    </div>

    <div id="LearningCheck" hidden class="col-lg-12 section-content-course">
        <div class="col-lg-8">
            <h3 class="learning-check-text">
                <span> Check your learning of key course concepts.</span>
            </h3>
            <h4 class="learning-check-text">
                <span>  Learning checks are not timed and only you can see the results.</span>
            </h4>
        </div>i
        <div class="col-lg-4" style="margin-top: 32px;">
            <a data-toggle="modal" data-target="#myModalTest" class="buttonTest a-learning-check">Try practice questions</a>
        </div>
    </div>
    <div id="Discussion" hidden class="col-lg-12 section-content-course">
        <div id="Posts" class="container">
            <div class="row">

                <div class="col-md-12">
                    <section class="comment-list">
                        <!-- First Comment -->
                        @foreach (var item in Model.ListOfPosts)
                        {
                            <article class="row marginTop">

                                <div class="col-md-12 col-sm-12">
                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            <header class="text-left">
                                                <span><b>@item.Author</b> on</span><time class="comment-date"><i class="fa fa-clock-o"></i> @item.Created</time>
                                            </header>
                                            <div class="comment-post">
                                                <p>
                                                    @item.Body
                                                </p>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </article>
                        }
                        @using (Html.BeginForm("Index", "Course", new { courseId = @Model.CourseId }, FormMethod.Post))
                        {
                            <div class="well">
                                <h4>Leave a Comment:</h4>
                                <div class="form-group">
                                    @Html.TextAreaFor(x => x.Text, new { @class = "form-control", @rows = 5, @style = "-moz-min-width:100%;-ms-min-width:100%;-o-min-width:100%;-webkit-min-width:100%;min-width:100%" })
                                </div>
                                <button type="submit" class="btn btn-primary">Add comment</button>
                            </div>
                        }
                    </section>
                </div>
            </div>
        </div>
    </div>
</section>
@if ((bool)System.Web.HttpContext.Current.Session["logged"])
{
    <div class="col-lg-12">
        @*<div class="col-lg-2">
                <button type="button" class="btn btn-default btn-lg marginTop" data-toggle="modal" data-target="#myModal">Add movie</button>
            </div>*@
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    @using (Html.BeginForm("AddMovie", "Admin", FormMethod.Post, new { role = "form" }))
                    {
                        <div class="modal-header form-group">
                            <label class="form-control-label">Video Title</label>
                            @Html.TextBoxFor(x => x.NewMovie.Title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.NewMovie.Title)
                        </div>

                        <div class="modal-header form-group">
                            <label class="form-control-label">Video Url</label>
                            @Html.TextBoxFor(x => x.NewMovie.VideoUrl, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.NewMovie.VideoUrl)
                        </div>

                        <div class="modal-header">
                            <label class="form-control-label">Course</label>
                            @{
                                var selectList = new SelectList(
                                    new List<SelectListItem>
                                    {
                                        new SelectListItem {Text = "C#", Value = "1"},
                                        new SelectListItem {Text = "Java", Value = "2"},
                                        new SelectListItem {Text = "AngularJs", Value = "3"},
                                        new SelectListItem {Text = "CSS", Value = "4"},
                                        new SelectListItem {Text = "HTML5", Value = "5"},
                                        new SelectListItem {Text = "JavaScript", Value = "6"},
                                        new SelectListItem {Text = "Node.js", Value = "7"},

                                    }, "Value", "Text");
                            }

                            @Html.DropDownListFor(m => m.CourseId, new SelectList(selectList, "Value", "Text", @Model.CourseId), new { @class = "form-control" })
                        </div>

                        <div class="form-group modal-header">
                            <input type="submit" class="btn btn-primary" value="Add">
                        </div>

                                }
                </div>
            </div>
        </div>
    </div>
                                }

<div id="myModalTest" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="container">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h3 id="QuestionText" class="modal-title" style="margin-top: 30px"></h3>
                </div>
                <div class="modal-body">
                    <div class="question">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="answer0" name="optradio" value=0><label class="labelAnswer" for="answer0" title="0"></label>
                            </h3>
                        </div>
                    </div>
                    <div class="question">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="answer1" name="optradio" value=1><label class="labelAnswer" for="answer1" title="1"></label>
                            </h3>
                        </div>
                    </div>
                    <div class="question">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="answer2" name="optradio" value=2><label class="labelAnswer" for="answer2" title="2"></label>
                            </h3>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="ConfirmButton2" type="button" class="btn btn-default">Select</button>
                </div>
            </div>
        </div>

    </div>
</div>

@Scripts.Render("~/bundles/jquery")

<script type='text/javascript'>
    var iterator = 0;
    var correctAnswers = 0;
    var listOfPosts = [];
    var incorectAnswers = [];
    var selectedAnswer;
    var count = 0;
    $(".buttonTest").click(function () {
        if (count % 2 == 1) {
            $(".labelAnswer").removeClass("goodAnswer badAnswer");
            count = 0;
        }
        iterator = 0;
        listOfPosts = [];
        @foreach (var item in Model.ListOfQuestions)
        {
            <text>
        listOfPosts.push({
            text: "@HttpUtility.JavaScriptStringEncode(item.Text)",
            answers: [
                "@HttpUtility.JavaScriptStringEncode(item.Answers[0])", "@HttpUtility.JavaScriptStringEncode(item.Answers[1])",
                "@HttpUtility.JavaScriptStringEncode(item.Answers[2])"
            ],
            correctAnswer: "@item.CorrectAnswer",
            id: @item.Id,
        });
        </text>
        }
        $("#QuestionText").text(listOfPosts[iterator].text);
        $('label[for=answer0]').text(listOfPosts[iterator].answers[0]);
        $('label[for=answer1]').text(listOfPosts[iterator].answers[1]);
        $('label[for=answer2]').text(listOfPosts[iterator].answers[2]);
    });
    $("#ConfirmButton2").click(function () {
        count++;

        if (count % 2 == 0) {
            if (iterator < listOfPosts.length) {
                $(".labelAnswer ").removeClass("goodAnswer badAnswer");
                $("#ConfirmButton2").text("Selected");
                $("#QuestionText").text(listOfPosts[iterator].text);
                $('label[for=answer0]').text(listOfPosts[iterator].answers[0]);
                $('label[for=answer1]').text(listOfPosts[iterator].answers[1]);
                $('label[for=answer2]').text(listOfPosts[iterator].answers[2]);
            } else {
                window.location = "/Test/Result?correctAnswers=" + correctAnswers + "/" + listOfPosts.length+"&incorrectAnswersId=" + incorectAnswers + "&courseId=" + @Model.CourseId;
            }

        } else {
            selectedAnswer = $('input[type=radio]:checked').val();
            if (selectedAnswer == listOfPosts[iterator].correctAnswer) {
                correctAnswers++;
            } else {
                incorectAnswers.push(listOfPosts[iterator].id, selectedAnswer);
                $('label[title=' + selectedAnswer + ']').addClass("badAnswer");
            }
            $("#ConfirmButton2").text("Next");
            $('label[title=' + listOfPosts[iterator].correctAnswer + ']').addClass("goodAnswer");
            iterator++;
        }
    });

</script>