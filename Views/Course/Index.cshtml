@model E_LearningWeb.ViewModels.CourseViewModel
<section id="SectionImage">
    <h1 class="col-lg-8 section-image-text">Getting Started with @Model.SpecificCourse.Title</h1>
    <h4 class="col-lg-8 section-image-text">by @Model.SpecificCourse.Author</h4>
    <h4 class="col-lg-8 section-image-text">@Model.SpecificCourse.ShortDescription</h4>
    <div class="col-lg-5">
        <button class="button-star-course" onclick="location.href = '@Url.Action("Index", "Video", new {videoUrl = @Model.ListOfMovies[0].VideoUrl})'">
            <span class="glyphicon glyphicon-play"></span>  Start Course
        </button>
    </div>
    <div></div>
</section>
<section class="nav nav-pills nav-stacked course-section " id="SectionMovies">
    <ul class="list-inline ul-content-course">
        <li id="LiMovies" class="selected li-movies div-link">Table of Contents</li>
        <li id="LiDescription" class="li-movies div-link">Description</li>
        <li id="LiDiscussion" class="li-movies div-link">Discussion</li>
        <li id="LiTest" class="li-movies div-link">Learning Check</li>
    </ul>
    <div id="TableOfContent" class="col-lg-12 section-content-course">
        @Html.Partial("Movies")
    </div>
    <div id="Description" hidden class="col-lg-12 section-content-course">
        <p class="description-text">@Model.SpecificCourse.Description</p>
    </div>
    <div id="Discussion" hidden class="col-lg-12 section-content-course">
        @Html.Partial("Comments")
    </div>
    <div id="LearningCheck" hidden class="col-lg-12 section-content-course">
        <div class="col-lg-8">
            <h3 class="learning-check-text">
                <span> Check your learning of key course concepts.</span>
            </h3>
            <h4 class="learning-check-text"> 
                <span>  Learning checks are not timed and only you can see the results.</span>
            </h4>
        </div>i
        <div class="col-lg-4" style="margin-top: 32px;">
            <a data-toggle="modal" data-target="#MyModalTest" class="buttonTest a-learning-check div-link">Try practice questions</a>
        </div>
    </div>
</section>
@if ((bool)System.Web.HttpContext.Current.Session["logged"])
{
<div class="col-lg-12">
    <div id="MyModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
             
                @using (Ajax.BeginForm("AddMovie", "Course", new { courseId = @Model.SpecificCourse.Id }, new AjaxOptions
                {
                    HttpMethod = "POST",
                    OnBegin = "onLoadBegin",
                    OnSuccess = "onLoadEnd",
                    UpdateTargetId = "TableOfContent"
                }, new { id = "FormAddMovie" })) // set new Id name for  Form
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-header form-group">
                        <label class="form-control-label">Video Title</label>
                        @Html.TextBoxFor(x => x.NewMovie.Title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.NewMovie.Title)
                    </div>

                        <div class="modal-header form-group">
                            <label class="form-control-label">Video Url</label>
                            @Html.TextBoxFor(x => x.NewMovie.VideoUrl, new { @class = "form-control youtube-url", @onchange = "validateYouTubeUrl()" })
                            <p class="youtube-url-validator"></p>
                        </div>

                        <div class="modal-header">
                            <label class="form-control-label">Course</label>
                            @{
                                var selectList = new SelectList(
                                    new List<SelectListItem>
                                    {
                                        new SelectListItem {Text = "C#", Value = "1"},
                                        new SelectListItem {Text = "Java", Value = "2"},
                                        new SelectListItem {Text = "AngularJs", Value = "3"},
                                        new SelectListItem {Text = "CSS", Value = "4"},
                                        new SelectListItem {Text = "HTML5", Value = "5"},
                                        new SelectListItem {Text = "JavaScript", Value = "6"},
                                        new SelectListItem {Text = "Node.js", Value = "7"},

                                    }, "Value", "Text");
                            }

                            @Html.DropDownListFor(m => m.NewMovie.CourseId, new SelectList(selectList, "Value", "Text", @Model.NewMovie.CourseId), new { @class = "form-control" })
                        </div>

                        <div class="form-group modal-header">
                            <input type="submit" class="btn btn-primary add-movie-button" value="Add"  onclick="validateYouTubeUrl()">
                        </div>
                                }
            </div>
        </div>
    </div>
</div>
                                }

<div id="MyModalTest" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="container">
                <div class="modal-header">
                    <div class="modal-window-text-header">
                        <div id="QuestionNumber" class="text-right"></div>
                    </div>
                    <h3 id="QuestionText" class="modal-title" style="margin-top: 30px"></h3>
                </div>
                <div class="modal-body">
                    <div class="question div-link" title="0">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="Answer0" name="optradio" value="0"><label for="Answer0" title="0"></label>
                            </h3>
                        </div>
                    </div>
                    <div class="question div-link" title="1">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="Answer1" name="optradio" value="1"><label for="Answer1" title="1"></label>
                            </h3>
                        </div>
                    </div>
                    <div class="question div-link" title="2">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="Answer2" name="optradio" value="2"><label for="Answer2" title="2"></label>
                            </h3>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="ConfirmButton2" type="button" class="btn btn-default">Select</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="spin" hidden>
    <img src="~/Content/ajax-loader.gif" />
</div>

<div id="modal-overlay" style="display: none">
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/rateit")
@Scripts.Render("~/bundles/bootstrap")
<script type='text/javascript'>
    var iterator = 0;
    var correctAnswers = 0;
    var listOfPosts = [];
    var incorectAnswers = [];
    var selectedAnswer;
    var count = 1;
    $(".buttonTest").click(function() {
        if (count % 2 == 1) {
            $(".question").removeClass("good-answer bad-answer");
            count = 1;
        }
        iterator = 0;
        listOfPosts = [];
        @foreach (var item in Model.ListOfQuestions)
        {

            <text>
        listOfPosts.push({
            text: "@HttpUtility.JavaScriptStringEncode(item.Text)",
            answers: [
                "@HttpUtility.JavaScriptStringEncode(item.Answers[0].Text)", "@HttpUtility.JavaScriptStringEncode(item.Answers[1].Text)",
                "@HttpUtility.JavaScriptStringEncode(item.Answers[2].Text)"
            ],
            correctAnswer: "@item.CorrectAnswer",
            id: @item.Id,
        });
        </text>
        }
        $("#QuestionNumber").text("Question " + (iterator + 1) + " of " + listOfPosts.length);
        $("#QuestionText").text(listOfPosts[iterator].text);
        $('label[for=Answer0]').text(listOfPosts[iterator].answers[0]);
        $('label[for=Answer1]').text(listOfPosts[iterator].answers[1]);
        $('label[for=Answer2]').text(listOfPosts[iterator].answers[2]);
    });
    $("#ConfirmButton2").click(function() {
        if (count % 2 == 0) {
            count++;
            $('input[type=radio]:checked').attr('checked', false);
            if (iterator < listOfPosts.length) {
                $(".question ").removeClass("good-answer bad-answer");
                $("#ConfirmButton2").text("Select");
                $("#QuestionText").text(listOfPosts[iterator].text);
                $('label[for=Answer0]').text(listOfPosts[iterator].answers[0]);
                $('label[for=Answer1]').text(listOfPosts[iterator].answers[1]);
                $('label[for=Answer2]').text(listOfPosts[iterator].answers[2]);
                $("#QuestionNumber").text("Question " + (iterator + 1) + " of " + listOfPosts.length);
            } else {
                window.location = "/Test/Result?correctAnswers=" + correctAnswers + " of " + listOfPosts.length + "&incorrectAnswers=" + incorectAnswers + "&courseId=" + @Model.SpecificCourse.Id;
            }

        } else if ($('input[type=radio]:checked').val()) {
            count++;
            selectedAnswer = $('input[type=radio]:checked').val();
            if (selectedAnswer == listOfPosts[iterator].correctAnswer) {
                correctAnswers++;
            } else {
                incorectAnswers.push(listOfPosts[iterator].id, selectedAnswer);
                $('div[title=' + selectedAnswer + ']').addClass("bad-answer");
            }
            $("#ConfirmButton2").text("Next");
            $('div[title=' + listOfPosts[iterator].correctAnswer + ']').addClass("good-answer");
            iterator++;

        }
    });

</script>