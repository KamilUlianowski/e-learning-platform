@model E_LearningWeb.ViewModels.CourseViewModel
<section id="SectionImage">
    <h1 class="col-lg-8 section-image-text" >Getting Started with @Model.SpecificCourse.Title</h1>
    <h4 class="col-lg-8 section-image-text" >by @Model.SpecificCourse.Author</h4>
    <h4 class="col-lg-8 section-image-text" >@Model.SpecificCourse.ShortDescription</h4>
    <div class="col-lg-5">
        <button class="button-star-course" onclick="location.href = '@Url.Action("Index", "Video", new {videoUrl = @Model.ListOfMovies[0].VideoUrl})'">
            <span class="glyphicon glyphicon-play"></span>  Start Course
        </button>
    </div>
    <div></div>
</section>
<section class="nav nav-pills nav-stacked course-section " id="SectionMovies">
    <ul class="list-inline ul-content-course">
        <li id="LiMovies" class="selected li-movies div-link">Table of Contents</li>
        <li id="LiDescription" class="li-movies div-link">Description</li>
        <li id="LiDiscussion" class="li-movies div-link">Discussion</li>
        <li id="LiTest" class="li-movies div-link">Learning Check</li>
    </ul>
    <div id="TableOfContent" class="col-lg-12 section-content-course">
        @foreach (var item in Model.ListOfMovies)
        {

            <a class="col-lg-8 movie-row" href="@Url.Action("Index", "Video", new {videoUrl = @item.VideoUrl})">
                <h3><span class="glyphicon glyphicon-play-circle" aria-hidden="true"></span>   <span>@item.Title</span></h3>
            </a>
            <div class="col-lg-2 stars">
                <div id="@item.Id" class="my-rating jq-stars"></div>
            </div>
            <div class="col-lg-1 matgin-top  ">
                @if ((bool)System.Web.HttpContext.Current.Session["logged"])
                {
                    <span>
                        <button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("UpdateMovie", "Admin", new {id = @item.Id})'">
                            <span class="glyphicon glyphicon-edit"></span>
                        </button>
                    </span>
                }
            </div>
            <div class="col-lg-1 matgin-top  ">
                @if ((bool)System.Web.HttpContext.Current.Session["logged"])
                {
                    <span>
                        <button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("DeleteMovie", "Admin", new {id = @item.Id, courseId = @item.CourseId})'">
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </span>
                }
            </div>

        }@if ((bool)System.Web.HttpContext.Current.Session["logged"])
        {
            <div class="col-lg-5">
                <button type="button" class="btn btn-default btn-lg matgin-top" data-toggle="modal" data-target="#MyModal">Add movie</button>
            </div>
        }
    </div>
    <div id="Description" hidden class="col-lg-12 section-content-course">
        <p class="description-text">@Model.SpecificCourse.Description</p>
    </div>

    <div id="LearningCheck" hidden class="col-lg-12 section-content-course">
        <div class="col-lg-8">
            <h3 class="learning-check-text">
                <span> Check your learning of key course concepts.</span>
            </h3>
            <h4 class="learning-check-text">
                <span>  Learning checks are not timed and only you can see the results.</span>
            </h4>
        </div>i
        <div class="col-lg-4" style="margin-top: 32px;">
            <a data-toggle="modal" data-target="#MyModalTest" class="buttonTest a-learning-check div-link">Try practice questions</a>
        </div>
    </div>
    <div id="Discussion" hidden class="col-lg-12 section-content-course">
        <div id="Posts" class="container">
            <div class="row">

                <div class="col-md-12">
                    <section class="comment-list">
                        <!-- First Comment -->
                        @foreach (var item in Model.ListOfPosts)
                        {
                            <article class="row matgin-top">

                                <div class="col-md-12 col-sm-12">
                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            <header class="text-left">
                                                <span><b>@item.Author</b> on</span><time class="comment-date"><i class="fa fa-clock-o"></i> @item.Created</time>
                                            </header>
                                            <div class="comment-post">
                                                <p>
                                                    @item.Body
                                                </p>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </article>
                        }
                        @using (Html.BeginForm("Index", "Course", new { courseId = @Model.SpecificCourse.Id }, FormMethod.Post))
                        {
                            <div class="well">
                                <h4>Leave a Comment:</h4>
                                <div class="form-group">
                                    @Html.TextAreaFor(x => x.Text, new { @class = "form-control", @rows = 5, @style = "-moz-min-width:100%;-ms-min-width:100%;-o-min-width:100%;-webkit-min-width:100%;min-width:100%" })
                                </div>
                                <button type="submit" class="btn btn-primary">Add comment</button>
                            </div>
                        }
                    </section>
                </div>
            </div>
        </div>
    </div>
</section>
@if ((bool)System.Web.HttpContext.Current.Session["logged"])
{
    <div class="col-lg-12">
        @*<div class="col-lg-2">
                <button type="button" class="btn btn-default btn-lg matgin-top" data-toggle="modal" data-target="#MyModal">Add movie</button>
            </div>*@
        <div id="MyModal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal Content-->
                <div class="modal-content">
                    @using (Html.BeginForm("AddMovie", "Admin", FormMethod.Post, new { role = "form" }))
                    {
                        <div class="modal-header form-group">
                            <label class="form-control-label">Video Title</label>
                            @Html.TextBoxFor(x => x.NewMovie.Title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.NewMovie.Title)
                        </div>

                        <div class="modal-header form-group">
                            <label class="form-control-label">Video Url</label>
                            @Html.TextBoxFor(x => x.NewMovie.VideoUrl, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.NewMovie.VideoUrl)
                        </div>

                        <div class="modal-header">
                            <label class="form-control-label">Course</label>
                            @{
                                var selectList = new SelectList(
                                    new List<SelectListItem>
                                    {
                                        new SelectListItem {Text = "C#", Value = "1"},
                                        new SelectListItem {Text = "Java", Value = "2"},
                                        new SelectListItem {Text = "AngularJs", Value = "3"},
                                        new SelectListItem {Text = "CSS", Value = "4"},
                                        new SelectListItem {Text = "HTML5", Value = "5"},
                                        new SelectListItem {Text = "JavaScript", Value = "6"},
                                        new SelectListItem {Text = "Node.js", Value = "7"},

                                    }, "Value", "Text");
                            }

                            @Html.DropDownListFor(m => m.SpecificCourse.Id, new SelectList(selectList, "Value", "Text", @Model.SpecificCourse.Id), new { @class = "form-control" })
                        </div>

                        <div class="form-group modal-header">
                            <input type="submit" class="btn btn-primary" value="Add">
                        </div>

                                }
                </div>
            </div>
        </div>
    </div>
                                }

<div id="MyModalTest" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal Content-->
        <div class="modal-content">
            <div class="container">
                <div class="modal-header">
                    <div class="modal-window-text-header">
                        <div id="QuestionNumber" class="text-right"></div>
                    </div>
                    <h3 id="QuestionText" class="modal-title" style="margin-top: 30px"></h3>
                </div>
                <div class="modal-body">
                    <div class="question div-link" title="0">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="Answer0" name="optradio" value=0><label for="Answer0" title="0"></label>
                            </h3>
                        </div>
                    </div>
                    <div class="question div-link" title="1">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="Answer1" name="optradio" value=1><label for="Answer1" title="1"></label>
                            </h3>
                        </div>
                    </div>
                    <div class="question div-link" title="2">
                        <div class="radio">
                            <h3>
                                <input type="radio" id="Answer2" name="optradio" value=2><label for="Answer2" title="2"></label>
                            </h3>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="ConfirmButton2" type="button" class="btn btn-default">Select</button>
                    </div>
                </div>
            </div>

        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/rateit")

    <script type='text/javascript'>

    @foreach(var item in Model.ListOfMovies)
    {
        <text>
        $("#@item.Id").starRating({
            initialRating: @item.Rating,
            strokeColor: '#894A00',
            strokeWidth: 10,
            starSize: 25,
            callback: function(currentRating, $el) {
                $.ajax({
                    type: "POST",
                    url: "/Course/AddVote",
                    data: { movieId: @item.Id, rating: currentRating },
                    success: function(msg) {
                    },
                    error: function(e) {
                    }
                });
            }
        }); </text>
    }
        var iterator = 0;
        var correctAnswers = 0;
        var listOfPosts = [];
        var incorectAnswers = [];
        var selectedAnswer;
        var count = 1;
        $(".buttonTest").click(function() {
            if (count % 2 == 1) {
                $(".question").removeClass("good-answer bad-answer");
                count = 1;
            }
            iterator = 0;
            listOfPosts = [];
            @foreach (var item in Model.ListOfQuestions)
                {
                    <text>
            listOfPosts.push({
                text: "@HttpUtility.JavaScriptStringEncode(item.Text)",
                answers: [
                    "@HttpUtility.JavaScriptStringEncode(item.Answers[0])", "@HttpUtility.JavaScriptStringEncode(item.Answers[1])",
                    "@HttpUtility.JavaScriptStringEncode(item.Answers[2])"
                ],
                correctAnswer: "@item.CorrectAnswer",
                id: @item.Id,
            });
            </text>
                }
            $("#QuestionNumber").text("Question " + (iterator+1) + " of " + listOfPosts.length);
            $("#QuestionText").text(listOfPosts[iterator].text);
            $('label[for=Answer0]').text(listOfPosts[iterator].answers[0]);
            $('label[for=Answer1]').text(listOfPosts[iterator].answers[1]);
            $('label[for=Answer2]').text(listOfPosts[iterator].answers[2]);
        });
        $("#ConfirmButton2").click(function() {
            if (count % 2 == 0) {
                count++;
                $('input[type=radio]:checked').attr('checked', false);
                if (iterator < listOfPosts.length) {
                    $(".question ").removeClass("good-answer bad-answer");
                    $("#ConfirmButton2").text("Select");
                    $("#QuestionText").text(listOfPosts[iterator].text);
                    $('label[for=Answer0]').text(listOfPosts[iterator].answers[0]);
                    $('label[for=Answer1]').text(listOfPosts[iterator].answers[1]);
                    $('label[for=Answer2]').text(listOfPosts[iterator].answers[2]);
                    $("#QuestionNumber").text("Question " + (iterator+1) + " of " + listOfPosts.length);
                } else {
                    window.location = "/Test/Result?correctAnswers=" + correctAnswers + " of " + listOfPosts.length + "&incorrectAnswers=" + incorectAnswers + "&courseId=" + @Model.SpecificCourse.Id;
                    @*$.ajax({
                            type: "POST",
                            url: "/Test/SaveAnsw,ers",
                            data: { answers: "incorectAnswers" },
                            success: function(msg) {
                                alert(incorrectAnswers);
                                alert(msg);
                                window.location = "/Test/Result?correctAnswers=" + correctAnswers + "/" + listOfPosts.length + "&courseId=" + @Model.SpecificCourse.Id;
                            },
                            error: function(e) {
                                alert("Something is wrong");
                            }
                        });*@
                }

            } else if ($('input[type=radio]:checked').val()) {
                count++;
                selectedAnswer = $('input[type=radio]:checked').val();
                if (selectedAnswer == listOfPosts[iterator].correctAnswer) {
                    correctAnswers++;
                } else {
                    incorectAnswers.push(listOfPosts[iterator].id, selectedAnswer);
                    $('div[title=' + selectedAnswer + ']').addClass("bad-answer");
                }
                $("#ConfirmButton2").text("Next");
                $('div[title=' + listOfPosts[iterator].correctAnswer + ']').addClass("good-answer");
                iterator++;

            }
        });

    </script>
</div>